name: Manual APK Build

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: '构建类型'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - debug
      environment:
        description: '构建环境'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - development
          - testing

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 30
        build-tools: 30.0.3
        
    - name: Install Cordova
      run: npm install -g cordova
      
    - name: Install dependencies
      run: npm install
      
    - name: Check Cordova requirements
      run: |
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        cordova requirements android
        
    - name: Remove existing Android platform if exists
      run: |
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        if [ -d "platforms/android" ]; then
          echo "Removing existing Android platform..."
          cordova platform rm android || echo "Platform removal failed, continuing..."
        fi
        
    - name: Add Android platform
      run: |
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        cordova platform add android@latest
        
    - name: Prepare build
      run: |
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        cordova prepare android
        
    - name: Build APK with detailed logging
      run: |
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        echo "Starting APK build..."
        echo "Build type: ${{ github.event.inputs.build_type }}"
        echo "Environment: ${{ github.event.inputs.environment }}"
        cordova build android --${{ github.event.inputs.build_type }} --verbose 2>&1 | tee build.log
        echo "Build exit code: $?"
        
    - name: Find APK files
      run: |
        echo "Searching for APK files..."
        find platforms/android -name "*.apk" -type f -exec ls -la {} \;
        echo "Checking build outputs directory:"
        ls -la platforms/android/app/build/outputs/ || echo "No outputs directory"
        ls -la platforms/android/app/build/outputs/apk/ || echo "No APK directory"
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: app-${{ github.event.inputs.build_type }}-apk
        path: platforms/android/app/build/outputs/apk/${{ github.event.inputs.build_type }}/*.apk
        
    - name: Upload build log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-log-${{ github.event.inputs.build_type }}
        path: build.log
        retention-days: 7
        
    - name: Upload all outputs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: all-build-outputs-${{ github.event.inputs.build_type }}
        path: platforms/android/app/build/outputs/
        retention-days: 7
        
    - name: Build status notification
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ APK构建成功！"
          echo "📱 构建类型: ${{ github.event.inputs.build_type }}"
          echo "🌍 环境: ${{ github.event.inputs.environment }}"
        else
          echo "❌ APK构建失败"
          echo "请检查构建日志获取详细信息"
        fi