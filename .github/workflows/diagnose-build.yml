name: Diagnose Cordova Build

on:
  workflow_dispatch:
  push:
    branches: [ diagnose ]

jobs:
  diagnose:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Install Android SDK
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        
        # Download and install Android SDK
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        mkdir -p $HOME/android-sdk/cmdline-tools
        unzip commandlinetools-linux-9477386_latest.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        # Set environment variables
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        
        # Accept licenses and install required packages
        yes | sdkmanager --licenses || true
        sdkmanager "platforms;android-33" "build-tools;33.0.0" "platform-tools"
        
    - name: Install Cordova
      run: |
        npm install -g cordova@latest
        cordova --version
        
    - name: Diagnostic - Check project structure
      run: |
        echo "=== Project Structure Diagnosis ==="
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "Checking for Cordova files:"
        echo "config.xml exists: $([ -f "config.xml" ] && echo "YES" || echo "NO")"
        echo "package.json exists: $([ -f "package.json" ] && echo "YES" || echo "NO")"
        echo "www directory exists: $([ -d "www" ] && echo "YES" || echo "NO")"
        echo "platforms directory exists: $([ -d "platforms" ] && echo "YES" || echo "NO")"
        echo "plugins directory exists: $([ -d "plugins" ] && echo "YES" || echo "NO")"
        
    - name: Diagnostic - Check Node.js dependencies
      run: |
        echo "=== Node.js Dependencies Diagnosis ==="
        if [ -f "package.json" ]; then
          echo "package.json content:"
          cat package.json | python -m json.tool
          echo ""
          echo "Installing dependencies..."
          npm install --verbose
          echo ""
          echo "Installed Cordova version:"
          npm list cordova
          echo ""
          echo "Installed Cordova platforms:"
          npm list cordova-android || echo "cordova-android not installed"
        else
          echo "No package.json found!"
        fi
        
    - name: Diagnostic - Check config.xml
      run: |
        echo "=== Config.xml Diagnosis ==="
        if [ -f "config.xml" ]; then
          echo "config.xml content:"
          cat config.xml
          echo ""
          echo "Validating XML syntax..."
          xmllint --noout config.xml && echo "XML syntax is valid" || echo "XML syntax error detected"
        else
          echo "No config.xml found!"
        fi
        
    - name: Diagnostic - Test Cordova commands
      run: |
        echo "=== Cordova Commands Diagnosis ==="
        echo "Cordova version:"
        cordova --version
        echo ""
        echo "Cordova requirements:"
        cordova requirements android || echo "Requirements check failed"
        echo ""
        echo "Available Cordova platforms:"
        cordova platform list || echo "Platform list failed"
        
    - name: Diagnostic - Try adding platform
      run: |
        echo "=== Platform Addition Test ==="
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        
        # Try to add platform with detailed output
        echo "Attempting to add Android platform..."
        cordova platform add android@latest --verbose || {
          echo "Platform addition failed, trying alternative approach..."
          npm install cordova-android@latest
          cordova platform add android --verbose
        }
        
    - name: Diagnostic - Check build environment
      run: |
        echo "=== Build Environment Diagnosis ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        echo "PATH: $PATH"
        echo ""
        echo "Java version:"
        java -version
        echo ""
        echo "Node.js version:"
        node --version
        echo ""
        echo "npm version:"
        npm --version
        echo ""
        echo "Available Android tools:"
        which android || echo "android command not found"
        which adb || echo "adb command not found"
        which sdkmanager || echo "sdkmanager command not found"
        
    - name: Upload diagnostic results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: diagnostic-results
        path: |
          package.json
          config.xml
          platforms/
        retention-days: 7